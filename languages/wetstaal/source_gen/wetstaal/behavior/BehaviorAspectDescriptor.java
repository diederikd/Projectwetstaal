package wetstaal.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myRechtsbetrekking__BehaviorDescriptor = new Rechtsbetrekking__BehaviorDescriptor();
  private final BHDescriptor myIsBeeindigd__BehaviorDescriptor = new IsBeeindigd__BehaviorDescriptor();
  private final BHDescriptor myVoordeelkant__BehaviorDescriptor = new Voordeelkant__BehaviorDescriptor();
  private final BHDescriptor myGebeurtenisMetRechtsgevolg__BehaviorDescriptor = new GebeurtenisMetRechtsgevolg__BehaviorDescriptor();
  private final BHDescriptor myDatumTijd__BehaviorDescriptor = new DatumTijd__BehaviorDescriptor();
  private final BHDescriptor myIsOnstaan__BehaviorDescriptor = new IsOnstaan__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myDatumTijd__BehaviorDescriptor;
      case 1:
        return myGebeurtenisMetRechtsgevolg__BehaviorDescriptor;
      case 2:
        return myIsBeeindigd__BehaviorDescriptor;
      case 3:
        return myIsOnstaan__BehaviorDescriptor;
      case 4:
        return myRechtsbetrekking__BehaviorDescriptor;
      case 5:
        return myVoordeelkant__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c5c0ec4L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c5c0ec3L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x40929f0dfaddf70L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x56d007db678f88abL), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x40929f0dfaddf55L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c3c8fe0L)).seal();
}
