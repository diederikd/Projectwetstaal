package wetstaal.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import jetbrains.mps.openapi.editor.descriptor.EditorHintsProvider;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;
import java.util.Arrays;
import jetbrains.mps.editor.runtime.descriptor.ConceptEditorHintImpl;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase implements EditorHintsProvider {
  private Collection<ConceptEditorHint> myHints = Arrays.<ConceptEditorHint>asList(new ConceptEditorHintImpl("tooltipHint_acmcvu_c4a", "", false, "wetstaal.editor.GeneratedHints.tooltipHint_acmcvu_c4a"), new ConceptEditorHintImpl("tooltipHint_acmcvu_e4a", "", false, "wetstaal.editor.GeneratedHints.tooltipHint_acmcvu_e4a"), new ConceptEditorHintImpl("tooltipHint_acmcvu_f4a", "", false, "wetstaal.editor.GeneratedHints.tooltipHint_acmcvu_f4a"), new ConceptEditorHintImpl("tooltipHint_z6ziza_c4a", "", false, "wetstaal.editor.GeneratedHints.tooltipHint_z6ziza_c4a"), new ConceptEditorHintImpl("tooltipHint_z6ziza_e4a", "", false, "wetstaal.editor.GeneratedHints.tooltipHint_z6ziza_e4a"), new ConceptEditorHintImpl("tooltipHint_z6ziza_f4a", "", false, "wetstaal.editor.GeneratedHints.tooltipHint_z6ziza_f4a"));
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new GebeurtenisMetRechtsgevolg_Editor());
      case 1:
        return Arrays.asList(new ConceptEditor[]{new Nadeelkant_Editor(), new Nadeelkant_tooltipHint_acmcvu_c4a_Editor(), new Nadeelkant_tooltipHint_acmcvu_e4a_Editor(), new Nadeelkant_tooltipHint_acmcvu_f4a_Editor()});
      case 2:
        return Collections.<ConceptEditor>singletonList(new Rechtsbetrekking_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Rechtshandeling_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Rechtsobject_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Rechtssubject_Editor());
      case 6:
        return Arrays.asList(new ConceptEditor[]{new Voordeelkant_Editor(), new Voordeelkant_tooltipHint_z6ziza_c4a_Editor(), new Voordeelkant_tooltipHint_z6ziza_e4a_Editor(), new Voordeelkant_tooltipHint_z6ziza_f4a_Editor()});
      case 7:
        return Collections.<ConceptEditor>singletonList(new Wetsmodel_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }

  public Collection<ConceptEditorHint> getHints() {
    return myHints;
  }

  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new Nadeelkant_SubstituteMenu());
      case 1:
        return Collections.<SubstituteMenu>singletonList(new Voordeelkant_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c5c0ec3L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c3c8fe4L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x40929f0dfaddf55L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x3a6f73ff8479fcf5L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c634e1cL), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x40929f0dfabe012L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c3c8fe0L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x781c3588c200b263L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c3c8fe4L), MetaIdFactory.conceptId(0xe55f258baf614a6aL, 0x8f907f249af47f79L, 0x180645c76c3c8fe0L)).seal();
}
