package wetstaal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_DatumTijd;
  private ConceptPresentation props_GebeurtenisMetRechtsgevolg;
  private ConceptPresentation props_IsBeeindigd;
  private ConceptPresentation props_IsOnstaan;
  private ConceptPresentation props_IsUitgevoerd;
  private ConceptPresentation props_Nadeelkant;
  private ConceptPresentation props_Rechtsbetrekking;
  private ConceptPresentation props_Rechtsfeit;
  private ConceptPresentation props_Rechtshandeling;
  private ConceptPresentation props_Rechtsobject;
  private ConceptPresentation props_Rechtssubject;
  private ConceptPresentation props_UitgevoerdOp;
  private ConceptPresentation props_Voordeelkant;
  private ConceptPresentation props_Wetsmodel;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DatumTijd:
        if (props_DatumTijd == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_DatumTijd = cpb.create();
        }
        return props_DatumTijd;
      case LanguageConceptSwitch.GebeurtenisMetRechtsgevolg:
        if (props_GebeurtenisMetRechtsgevolg == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_GebeurtenisMetRechtsgevolg = cpb.create();
        }
        return props_GebeurtenisMetRechtsgevolg;
      case LanguageConceptSwitch.IsBeeindigd:
        if (props_IsBeeindigd == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_IsBeeindigd = cpb.create();
        }
        return props_IsBeeindigd;
      case LanguageConceptSwitch.IsOnstaan:
        if (props_IsOnstaan == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_IsOnstaan = cpb.create();
        }
        return props_IsOnstaan;
      case LanguageConceptSwitch.IsUitgevoerd:
        if (props_IsUitgevoerd == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_IsUitgevoerd = cpb.create();
        }
        return props_IsUitgevoerd;
      case LanguageConceptSwitch.Nadeelkant:
        if (props_Nadeelkant == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Nadeelkant = cpb.create();
        }
        return props_Nadeelkant;
      case LanguageConceptSwitch.Rechtsbetrekking:
        if (props_Rechtsbetrekking == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Rechtsbetrekking = cpb.create();
        }
        return props_Rechtsbetrekking;
      case LanguageConceptSwitch.Rechtsfeit:
        if (props_Rechtsfeit == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Rechtsfeit = cpb.create();
        }
        return props_Rechtsfeit;
      case LanguageConceptSwitch.Rechtshandeling:
        if (props_Rechtshandeling == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Rechtshandeling = cpb.create();
        }
        return props_Rechtshandeling;
      case LanguageConceptSwitch.Rechtsobject:
        if (props_Rechtsobject == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Rechtsobject = cpb.create();
        }
        return props_Rechtsobject;
      case LanguageConceptSwitch.Rechtssubject:
        if (props_Rechtssubject == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Rechtssubject = cpb.create();
        }
        return props_Rechtssubject;
      case LanguageConceptSwitch.UitgevoerdOp:
        if (props_UitgevoerdOp == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_UitgevoerdOp = cpb.create();
        }
        return props_UitgevoerdOp;
      case LanguageConceptSwitch.Voordeelkant:
        if (props_Voordeelkant == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Voordeelkant = cpb.create();
        }
        return props_Voordeelkant;
      case LanguageConceptSwitch.Wetsmodel:
        if (props_Wetsmodel == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Wetsmodel = cpb.create();
        }
        return props_Wetsmodel;
    }
    return null;
  }
}
